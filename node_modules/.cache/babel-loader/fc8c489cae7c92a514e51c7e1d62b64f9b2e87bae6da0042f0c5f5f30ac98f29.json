{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liza\\\\Desktop\\\\bnet24_front_not_bootstrap\\\\src\\\\pages\\\\SignInPage\\\\SignInPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { AuthHeader, ButtonComponent, CardComponent, InputComponent } from \"../../components\";\nimport { signIn } from \"../../utils/api/user\";\nimport \"./SignInPage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignInPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(state => state.user);\n  const isLogin = useSelector(state => state.user.isLogin);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const emailRef = useRef(null);\n  useEffect(() => {\n    if (isLogin) {\n      navigate(\"/\");\n    }\n  }, [isLogin, navigate]);\n  const handlerEmail = e => setEmail(e.target.value);\n  const handlerPassword = e => setPassword(e.target.value);\n  const handlerAuth = () => {\n    dispatch(signIn(email, password));\n  };\n  const onBlurHandler = refInput => {\n    var _refInput$current;\n    const divMsg = getE;\n    if (((_refInput$current = refInput.current) === null || _refInput$current === void 0 ? void 0 : _refInput$current.value) === \"\") {\n      console.log(`${refInput.current.name} не может быть пустым!`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signInPage\",\n    children: /*#__PURE__*/_jsxDEV(CardComponent, {\n      children: [/*#__PURE__*/_jsxDEV(AuthHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        name: \"email\",\n        ref: emailRef,\n        onBlur: onBlurHandler.bind(this, emailRef),\n        onChange: handlerEmail,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n        type: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        value: password,\n        onChange: handlerPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n        title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n        onClick: handlerAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remember\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-me\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inp-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"checkbox\",\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"span-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/forgot-pas\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgot-pass\",\n            children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(SignInPage, \"DVZLvRR0pyt09uK9uRDtPdw+Zbw=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useForm","useDispatch","useSelector","NavLink","useNavigate","AuthHeader","ButtonComponent","CardComponent","InputComponent","signIn","jsxDEV","_jsxDEV","SignInPage","_s","dispatch","navigate","user","state","isLogin","email","setEmail","password","setPassword","emailRef","handlerEmail","e","target","value","handlerPassword","handlerAuth","onBlurHandler","refInput","_refInput$current","divMsg","getE","current","console","log","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","ref","onBlur","bind","onChange","title","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Liza/Desktop/bnet24_front_not_bootstrap/src/pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\r\nimport {useForm} from 'react-hook-form'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink, useNavigate } from \"react-router-dom\"\r\nimport { AuthHeader, ButtonComponent, CardComponent, InputComponent } from \"../../components\"\r\nimport { signIn } from \"../../utils/api/user\"\r\n\r\n\r\nimport \"./SignInPage.scss\"\r\n\r\nexport const SignInPage = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const user = useSelector((state) => state.user)\r\n    const isLogin = useSelector((state) => state.user.isLogin)\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const emailRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if (isLogin) {\r\n            navigate(\"/\")\r\n        }\r\n    }, [isLogin, navigate])\r\n\r\n    const handlerEmail = (e) => setEmail(e.target.value)\r\n\r\n    const handlerPassword = (e) => setPassword(e.target.value)\r\n\r\n    const handlerAuth = () => {\r\n        dispatch(signIn(email, password))\r\n    }\r\n\r\n    const onBlurHandler = (refInput) => {\r\n        const divMsg = getE\r\n        if (refInput.current?.value === \"\") {\r\n           console.log(`${refInput.current.name} не может быть пустым!`);\r\n        }  \r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"signInPage\">\r\n            <CardComponent>\r\n                <AuthHeader />\r\n                <input type=\"email\" placeholder=\"E-mail\" name=\"email\"  ref={emailRef} onBlur={onBlurHandler.bind(this, emailRef)} onChange={handlerEmail} value={email}/>\r\n                \r\n                <InputComponent type=\"password\" placeholder=\"Пароль\" value={password} onChange={handlerPassword} />\r\n                {/* {user.error && <span className=\"error-message\">Некорректно введены данные</span>} */}\r\n                <ButtonComponent title=\"Войти\" onClick={handlerAuth}/>\r\n                <div className=\"remember\">\r\n                    <div className=\"remember-me\">\r\n                        <div className=\"inp-container\">\r\n                            <input className=\"checkbox\" type=\"checkbox\" />\r\n                        </div>\r\n                        <div className=\"span-container\">\r\n                            <span className=\"title\">Запомнить меня</span>\r\n                        </div>\r\n                    </div>\r\n                    <NavLink to='/forgot-pas'><div className=\"forgot-pass\">Забыли пароль?</div></NavLink>\r\n                </div>\r\n            </CardComponent>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAAQC,OAAO,QAAO,iBAAiB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AACvD,SAASC,UAAU,EAAEC,eAAe,EAAEC,aAAa,EAAEC,cAAc,QAAQ,kBAAkB;AAC7F,SAASC,MAAM,QAAQ,sBAAsB;AAG7C,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,IAAI,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAC/C,MAAME,OAAO,GAAGhB,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC;EAE1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMyB,QAAQ,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAG7BF,SAAS,CAAC,MAAM;IACZ,IAAIqB,OAAO,EAAE;MACTH,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC,EAAE,CAACG,OAAO,EAAEH,QAAQ,CAAC,CAAC;EAEvB,MAAMS,YAAY,GAAIC,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEpD,MAAMC,eAAe,GAAIH,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE1D,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtBf,QAAQ,CAACL,MAAM,CAACU,KAAK,EAAEE,QAAQ,CAAC,CAAC;EACrC,CAAC;EAED,MAAMS,aAAa,GAAIC,QAAQ,IAAK;IAAA,IAAAC,iBAAA;IAChC,MAAMC,MAAM,GAAGC,IAAI;IACnB,IAAI,EAAAF,iBAAA,GAAAD,QAAQ,CAACI,OAAO,cAAAH,iBAAA,uBAAhBA,iBAAA,CAAkBL,KAAK,MAAK,EAAE,EAAE;MACjCS,OAAO,CAACC,GAAG,CAAE,GAAEN,QAAQ,CAACI,OAAO,CAACG,IAAK,wBAAuB,CAAC;IAChE;EACH,CAAC;EAGF,oBACI3B,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvB7B,OAAA,CAACJ,aAAa;MAAAiC,QAAA,gBACV7B,OAAA,CAACN,UAAU;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdjC,OAAA;QAAOkC,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,QAAQ;QAACR,IAAI,EAAC,OAAO;QAAES,GAAG,EAAExB,QAAS;QAACyB,MAAM,EAAElB,aAAa,CAACmB,IAAI,CAAC,IAAI,EAAE1B,QAAQ,CAAE;QAAC2B,QAAQ,EAAE1B,YAAa;QAACG,KAAK,EAAER;MAAM;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEzJjC,OAAA,CAACH,cAAc;QAACqC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,sCAAQ;QAACnB,KAAK,EAAEN,QAAS;QAAC6B,QAAQ,EAAEtB;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnGjC,OAAA,CAACL,eAAe;QAAC6C,KAAK,EAAC,gCAAO;QAACC,OAAO,EAAEvB;MAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtDjC,OAAA;QAAK4B,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACrB7B,OAAA;UAAK4B,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxB7B,OAAA;YAAK4B,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC1B7B,OAAA;cAAO4B,SAAS,EAAC,UAAU;cAACM,IAAI,EAAC;YAAU;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACNjC,OAAA;YAAK4B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAC3B7B,OAAA;cAAM4B,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNjC,OAAA,CAACR,OAAO;UAACkD,EAAE,EAAC,aAAa;UAAAb,QAAA,eAAC7B,OAAA;YAAK4B,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAAA/B,EAAA,CAzDYD,UAAU;EAAA,QACFX,WAAW,EACXG,WAAW,EACfF,WAAW,EACRA,WAAW;AAAA;AAAAoD,EAAA,GAJlB1C,UAAU;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}